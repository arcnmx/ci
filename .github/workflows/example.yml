env:
  CI_ALLOW_ROOT: '1'
  CI_CONFIG: ./examples/ci.nix
  CI_PLATFORM: gh-actions
jobs:
  ci:
    name: example
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-setup
      name: nix setup
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.run.bootstrap
        quiet: false
    - id: crex
      run: crex --help | lolcat --force
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
  ci-check:
    name: example check
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-action-build
      name: nix build ci.gh-actions.configFile
      uses: arcnmx/ci/actions/nix/build@master
      with:
        attrs: ci.gh-actions.configFile
        out-link: .ci/workflow.yml
    - id: ci-action-compare
      name: gh-actions compare
      uses: arcnmx/ci/actions/nix/run@master
      with:
        args: -u .github/workflows/example.yml .ci/workflow.yml
        attrs: nixpkgs.diffutils
        command: diff
  docs:
    env:
      GIT_DEPLOY_KEY: ${{ secrets.deploy_key }}
    name: docs
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.stage.docs.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.stage.docs.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.stage.docs.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.stage.docs.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
  mac:
    name: example-mac
    runs-on: macOS-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-setup
      name: nix setup
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.mac.run.bootstrap
        quiet: false
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.mac.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.mac.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.mac.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.mac.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
  old:
    name: example-old
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - id: ci-setup
      name: nix setup
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.old.run.bootstrap
        quiet: false
    - id: ci-dirty
      name: nix test dirty
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.old.run.test
        command: ci-build-dirty
        quiet: false
        stdout: ${{ runner.temp }}/ci.build.dirty
    - id: ci-test
      name: nix test build
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.old.run.test
        command: ci-build-realise
        ignore-exit-code: true
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
    - env:
        CI_EXIT_CODE: ${{ steps.ci-test.outputs.exit-code }}
      id: ci-summary
      name: nix test results
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.old.run.test
        command: ci-build-summarise
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.dirty
        stdout: ${{ runner.temp }}/ci.build.cache
    - env:
        CACHIX_SIGNING_KEY: ${{ secrets.CACHIX_SIGNING_KEY }}
      id: ci-cache
      if: always()
      name: nix test cache
      uses: arcnmx/ci/actions/nix/run@master
      with:
        attrs: ci.job.old.run.test
        command: ci-build-cache
        quiet: false
        stdin: ${{ runner.temp }}/ci.build.cache
  script:
    name: example script
    runs-on: ubuntu-latest
    steps:
    - id: checkout
      name: git clone
      uses: actions/checkout@v1
      with:
        submodules: true
    - id: nix-install
      name: nix install
      uses: arcnmx/ci/actions/nix/install@master
    - uses: actions/checkout@v1
    - name: example.sh
      run: ./example.sh
      working-directory: examples
name: example
'on':
- push
- pull_request
